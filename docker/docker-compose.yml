services:
  neo4j:
    image: neo4j:latest
    container_name: mcp-neo4j
    ports:
      - "7474:7474"  # Neo4j Browser
      - "7687:7687"  # Bolt protocol
    environment:
      - NEO4J_AUTH=neo4j/password123
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_memory_pagecache_size=1G
      - NEO4J_dbms_memory_heap_max__size=1G
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    healthcheck:
      test: ["CMD-SHELL", "cypher-shell -u neo4j -p password123 'RETURN 1' || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    networks:
      - mcp-network

  mcp-server:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    image: mcp-code-validator:node
    container_name: mcp-code-validator
    depends_on:
      neo4j:
        condition: service_healthy
    # ports:
      # Uncomment to expose MCP server port for network connections
      # - "8080:8080"
    environment:
      - NEO4J_URI=neo4j://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password123
      - NODE_ENV=production
      - MCP_PORT=8080
    # volumes:
      # Optional: Mount for development (uncomment for dev mode)
      # - ../src:/app/src:ro
      # - ../dist:/app/dist:ro
    stdin_open: true
    tty: true
    networks:
      - mcp-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pgrep node || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

volumes:
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
  neo4j_import:
    driver: local
  neo4j_plugins:
    driver: local

networks:
  mcp-network:
    driver: bridge